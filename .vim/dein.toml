[[plugins]]
repo = "puremourning/vimspector"
on_ft = ["python", "javascript"]
build = '''
    /install_gadget.py 
        --enable-python
        --force-enable-node
        --force-enable-php
'''
hook_add = '''
    nmap <Space>b <Plug>VimspectorToggleBreakpoint
    nmap <Space>dl :call vimspector#Launch()<CR>
    nmap <Space>dr :VimspectorReset<CR>
    nmap <Space>de :VimspectorEval
    nmap <Space>dw :VimspectorWatch
    nmap <Space>do :VimspectorShowOutput
    nmap <Space>di <Plug>VimspectorBalloonEval
    xmap <Space>di <Plug>VimspectorBalloonEval
'''


[[plugins]]
repo = 'tpope/vim-endwise'

[[plugins]]
repo = 'Townk/vim-autoclose'

[[plugins]]
repo = 'w0rp/ale'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'easymotion/vim-easymotion'
hook_add = '''
    nmap <Leader>s <Plug>(easymotion-s2)
    let g:EasyMotion_keys = 'hgjfkdls'
'''

[[plugins]]
repo = 'Shougo/unite.vim'

# indent
[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
  let g:indent_guides_enable_on_vim_startup=1
  let g:indent_guides_auto_colors = 0
  let g:indent_guides_exclude_filetypes = ['help', 'vimfiler']
'''

[[plugins]]
repo = 'preservim/nerdtree'
hook_add = '''
  nnoremap <A-b> :NERDTreeToggle<CR>
'''

# vim suggestion
[[plugins]]
repo = 'Shougo/neco-vim'

# status bar
[[plugins]]
repo = 'vim-airline/vim-airline-themes'

[[plugins]]
repo = 'vim-airline/vim-airline'
hook_add = '''
    " カラーテーマ指定してかっこよく
    "let g:airline_theme = 'badwolf'
    let g:airline_powerline_fonts = 1
    set laststatus=2
    " タブバーをかっこよく
    let g:airline#extensions#tabline#enabled = 1
    " 選択行列の表示をカスタム(デフォルトだと長くて横幅を圧迫するので最小限に)
    let g:airline_section_z = airline#section#create(['windowswap', '%3p%% ', 'linenr', ':%3v'])
    " virtulenvを認識しているか確認用に、現在activateされているvirtualenvを表示(vim-virtualenvの拡張)
    let g:airline#extensions#virtualenv#enabled = 1
    " gitのHEADから変更した行の+-を非表示(vim-gitgutterの拡張)
    let g:airline#extensions#hunks#enabled = 0
    " Lintツールによるエラー、警告を表示(ALEの拡張)
    let g:airline#extensions#ale#enabled = 1
    let g:airline#extensions#ale#error_symbol = 'E:'
    let g:airline#extensions#ale#warning_symbol = 'W:'
'''

# language server plotocol
[[plugins]]
repo = 'neoclide/coc.nvim'
rev = 'realease'
on_i = 1
merged = '0'
hook_source = 'call coil398#init#coc#hook_source()'
hook_add = '''
    nmap <silent> <space><space> :<C-u>CocList<cr>
    nmap <silent> <space>h :<C-u>call CocAction('doHover')<cr>
    nmap <silent> <C-]> <Plug>(coc-definition)
    nmap <silent> <C-]><C-]>  <Plug>(coc-references)
    nmap <silent> <space>rn <Plug>(coc-rename)
    nmap <silent> <A-S-f> <Plug>(coc-format)
    let g:lightline = {
      \'active': {
        \'right': [
          \['coc']
        \]
      \},
      \'component_function': {
        \'coc': 'coc#status'
      \}
    \}
'''

# comment out
[[plugins]]
repo = 'tpope/vim-commentary'
hook_add = '''
    autocmd FileType python setlocal commentstring=#\ %s
'''
