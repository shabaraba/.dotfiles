# php doc
[[plugins]]
repo = 'vim-scripts/PDV--phpDocumentor-for-Vim'
hook_add = '''
    let g:pdv_cfg_Type = "mixed"
    let g:pdv_cfg_Package = ""
    let g:pdv_cfg_Version = "$id$"
    let g:pdv_cfg_Author = "Tanaka <tanaka@example.com>"
    let g:pdv_cfg_License = "Hoge Lisence"
    inoremap /** <ESC>j:call PhpDocSingle()<CR>i
'''

[[plugins]]
repo = 'tpope/vim-endwise'

[[plugins]]
repo = 'Townk/vim-autoclose'

[[plugins]]
repo = 'w0rp/ale'

# vim suggestion
[[plugins]]
repo = 'Shougo/neco-vim'

# language server plotocol
[[plugins]]
repo = 'neoclide/coc.nvim'
rev = 'realease'
on_i = 1
#merged = '0'
hook_source = 'call coil398#init#coc#hook_source()'
hook_add = '''
    autocmd FileType json syntax match Comment +\/\/.\+$+
    nmap <silent> <space><space> :<C-u>CocList<cr>
    nmap <silent> <space>h :<C-u>call CocAction('doHover')<cr>
    nmap <silent> <C-]> <Plug>(coc-definition)
    nmap <silent> <C-]><C-]>  <Plug>(coc-references)
    nmap <silent> <space>rn <Plug>(coc-rename)
    nmap <silent> <A-S-f> <Plug>(coc-format)
    let g:lightline = {
      \'active': {
        \'right': [
          \['coc']
        \]
      \},
      \'component_function': {
        \'coc': 'coc#status'
      \}
    \}
'''

# comment out
[[plugins]]
repo = 'tpope/vim-commentary'
hook_add = '''
    autocmd FileType python setlocal commentstring=#\ %s
'''

