# # snipets
# [[plugins]]
# repo = 'SirVer/ultisnips'
# hook_add = '''
#     let g:UltiSnipsSnippetDirectories=["~/.config/ultisnips"]
#     let g:UltiSnipsExpandTrigger="<tab>"
#     let g:UltiSnipsJumpForwardTrigger="<c-b>"
#     let g:UltiSnipsJumpBackwardTrigger="<c-z>"

#     let g:UltiSnipsEditSplit="vertical"
# '''

# php doc
[[plugins]]
# repo = 'vim-scripts/PDV--phpDocumentor-for-Vim'
repo = 'nanndemoiikara/PDV--phpDocumentor-for-Vim'
hook_add = '''
    let g:pdv_cfg_Type = "mixed"
    let g:pdv_cfg_Package = ""
    let g:pdv_cfg_Version = "$id$"
    let g:pdv_cfg_Author = "Tanaka <tanaka@example.com>"
    let g:pdv_cfg_License = "Hoge Lisence"
    inoremap /** <ESC>j:call PhpDocSingle()<CR>i
'''

[[plugins]]
repo = 'tpope/vim-endwise'

[[plugins]]
repo = 'Townk/vim-autoclose'

[[plugins]]
repo = 'w0rp/ale'

# vim suggestion
[[plugins]]
repo = 'Shougo/neco-vim'

# language server plotocol
[[plugins]]
repo = 'neoclide/coc.nvim'
rev = 'realease'
on_i = 1
merged = '0'
hook_source = 'call coil398#init#coc#hook_source()'
hook_add = '''
    set statusline^=%{coc#status()}%{get(b:,'coc_current_function','')}
    autocmd FileType json syntax match Comment +\/\/.\+$+
    nmap <silent> <space><space> :<C-u>CocList<cr>
    nmap <silent> <space>h :<C-u>call CocAction('doHover')<cr>
    nmap <silent> <C-]> <Plug>(coc-definition)
    nmap <silent> <C-]><C-]>  <Plug>(coc-references)
    nmap <silent> <space>rn <Plug>(coc-rename)
    nmap <silent> <A-S-f> <Plug>(coc-format)
'''

# [[plugins]]
# repo = 'yuki-yano/fzf-preview.vim'
[[plugins]]
repo = 'junegunn/fzf'
build = './install --all'
merged = '0'
hook_add = '''
    nmap <Leader>f [fzf-p]
    xmap <Leader>f [fzf-p]

    nnoremap <silent> [fzf-p]p     :<C-u>CocCommand fzf-preview.FromResources project_mru git<CR>
    nnoremap <silent> [fzf-p]gs    :<C-u>CocCommand fzf-preview.GitStatus<CR>
    nnoremap <silent> [fzf-p]ga    :<C-u>CocCommand fzf-preview.GitActions<CR>
    nnoremap <silent> [fzf-p]b     :<C-u>CocCommand fzf-preview.Buffers<CR>
    nnoremap <silent> [fzf-p]B     :<C-u>CocCommand fzf-preview.AllBuffers<CR>
    nnoremap <silent> [fzf-p]o     :<C-u>CocCommand fzf-preview.FromResources buffer project_mru<CR>
    nnoremap <silent> [fzf-p]<C-o> :<C-u>CocCommand fzf-preview.Jumps<CR>
    nnoremap <silent> [fzf-p]g;    :<C-u>CocCommand fzf-preview.Changes<CR>
    nnoremap <silent> [fzf-p]/     :<C-u>CocCommand fzf-preview.Lines --add-fzf-arg=--no-sort --add-fzf-arg=--query="'"<CR>
    nnoremap <silent> [fzf-p]*     :<C-u>CocCommand fzf-preview.Lines --add-fzf-arg=--no-sort --add-fzf-arg=--query="'<C-r>=expand('<cword>')<CR>"<CR>
    nnoremap          [fzf-p]gr    :<C-u>CocCommand fzf-preview.ProjectGrep<Space>
    xnoremap          [fzf-p]gr    "sy:CocCommand   fzf-preview.ProjectGrep<Space>-F<Space>"<C-r>=substitute(substitute(@s, '\n', '', 'g'), '/', '\\/', 'g')<CR>"
    nnoremap <silent> [fzf-p]t     :<C-u>CocCommand fzf-preview.BufferTags<CR>
    nnoremap <silent> [fzf-p]q     :<C-u>CocCommand fzf-preview.QuickFix<CR>
    nnoremap <silent> [fzf-p]l     :<C-u>CocCommand fzf-preview.LocationList<CR>
'''

# jump
[[plugins]]
repo = 'pechorin/any-jump.vim'
hook_add = '''
    " Normal mode: Jump to definition under cursor
    nnoremap <leader>j :AnyJump<CR>

    " Visual mode: jump to selected text in visual mode
    xnoremap <leader>j :AnyJumpVisual<CR>

    " Normal mode: open previous opened file (after jump)
    nnoremap <leader>ab :AnyJumpBack<CR>

    " Normal mode: open last closed search window again
    nnoremap <leader>al :AnyJumpLastResults<CR>
'''


# comment out
[[plugins]]
repo = 'tpope/vim-commentary'
hook_add = '''
    autocmd FileType python setlocal commentstring=#\ %s
'''

# pug syntax highlighting
[[plugins]]
repo = 'digitaltoad/vim-pug'

# show current function in status bar "
#[[plugins]]
#repo = "tyru/current-func-info.vim"
#hook_add = '''
#    let &statusline .= ' [%{cfi#format("%s", "")}]'
#'''

# dart
# [[plugins]]
# repo = 'dart-lang/dart-vim-plugin'
# on_ft = ['dart']
# 
# [[plugins]]
# repo = 'thosakwe/vim-flutter'
# 
# [[plugins]]
# repo = 'natebosch/vim-lsc'
# 
# [[plugins]]
# repo = 'natebosch/vim-lsc-dart'
