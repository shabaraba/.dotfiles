[[plugins]]
repo = 'junegunn/fzf'
build = './install --all'
merged = '0'

[[plugins]]
repo = 'yuki-yano/fzf-preview.vim'
rev = 'release/rpc'
hook_add = '''
    nmap <Leader>f [fzf-p]
    xmap <Leader>f [fzf-p]
"    nnoremap <silent> [fzf-p]p     :<C-u>FzfPreviewFromResourcesRpc project_mru git<CR>
"    nnoremap <silent> [fzf-p]gs    :<C-u>FzfPreviewGitStatusRpc<CR>
"    nnoremap <silent> [fzf-p]ga    :<C-u>FzfPreviewGitActionsRpc<CR>
"    nnoremap <silent> [fzf-p]b     :<C-u>FzfPreviewBuffersRpc<CR>
"    nnoremap <silent> [fzf-p]B     :<C-u>FzfPreviewAllBuffersRpc<CR>
"    nnoremap <silent> [fzf-p]o     :<C-u>FzfPreviewFromResourcesRpc buffer project_mru<CR>
"    nnoremap <silent> [fzf-p]<C-o> :<C-u>FzfPreviewJumpsRpc<CR>
"    nnoremap <silent> [fzf-p]g;    :<C-u>FzfPreviewChangesRpc<CR>
"    nnoremap <silent> [fzf-p]/     :<C-u>FzfPreviewLinesRpc --add-fzf-arg=--no-sort --add-fzf-arg=--query="'"<CR>
"    nnoremap <silent> [fzf-p]*     :<C-u>FzfPreviewLinesRpc --add-fzf-arg=--no-sort --add-fzf-arg=--query="'<C-r>=expand('<cword>')<CR>"<CR>
"    nnoremap          [fzf-p]gr    :<C-u>FzfPreviewProjectGrepRpc<Space>
"    xnoremap          [fzf-p]gr    "sy:FzfPreview.ProjectGrepRpc<Space>-F<Space>"<C-r>=substitute(substitute(@s, '\n', '', 'g'), '/', '\\/', 'g')<CR>"
"    nnoremap <silent> [fzf-p]t     :<C-u>FzfPreviewBufferTagsRpc<CR>
"    nnoremap <silent> [fzf-p]q     :<C-u>FzfPreviewQuickFixRpc<CR>
"    nnoremap <silent> [fzf-p]l     :<C-u>FzfPreviewLocationListRpc<CR>

    nnoremap <silent> [fzf-p]p     :<C-u>CocCommand fzf-preview.FromResources project_mru git<CR>
    nnoremap <silent> [fzf-p]af    :<C-u>CocCommand fzf-preview.MruFiles<CR> " all files
    nnoremap <silent> [fzf-p]gs    :<C-u>CocCommand fzf-preview.GitStatus<CR>
    nnoremap <silent> [fzf-p]ga    :<C-u>CocCommand fzf-preview.GitActions<CR>
    nnoremap <silent> [fzf-p]b     :<C-u>CocCommand fzf-preview.Buffers<CR>
    nnoremap <silent> [fzf-p]B     :<C-u>CocCommand fzf-preview.AllBuffers<CR>
    nnoremap <silent> [fzf-p]o     :<C-u>CocCommand fzf-preview.FromResources buffer project_mru<CR>
    nnoremap <silent> [fzf-p]<C-o> :<C-u>CocCommand fzf-preview.Jumps<CR>
    nnoremap <silent> [fzf-p]g;    :<C-u>CocCommand fzf-preview.Changes<CR>
    nnoremap <silent> [fzf-p]/     :<C-u>CocCommand fzf-preview.Lines --add-fzf-arg=--no-sort --add-fzf-arg=--query="'"<CR>
    nnoremap <silent> [fzf-p]*     :<C-u>CocCommand fzf-preview.Lines --add-fzf-arg=--no-sort --add-fzf-arg=--query="'<C-r>=expand('<cword>')<CR>"<CR>
    nnoremap          [fzf-p]gr    :<C-u>CocCommand fzf-preview.ProjectGrep<Space>
    xnoremap          [fzf-p]gr    "sy:CocCommand   fzf-preview.ProjectGrep<Space>-F<Space>"<C-r>=substitute(substitute(@s, '\n', '', 'g'), '/', '\\/', 'g')<CR>"
    nnoremap <silent> [fzf-p]t     :<C-u>CocCommand fzf-preview.BufferTags<CR>
    nnoremap <silent> [fzf-p]q     :<C-u>CocCommand fzf-preview.QuickFix<CR>
    nnoremap <silent> [fzf-p]l     :<C-u>CocCommand fzf-preview.LocationList<CR>
    nnoremap <silent> [fzf-p]<C-]> :<C-u>CocCommand fzf-preview.CocDefinition<CR>
    nnoremap <silent> [fzf-p]<C-]><C-]> :<C-u>CocCommand fzf-preview.CocReferences<CR>
    nnoremap <silent> [fzf-p]df    :<C-u>CocCommand fzf-preview.DirectoryFiles<CR>
'''

# [[plugins]]
# repo = 'nvim-lua/plenary.nvim'
# [[plugins]]
# repo = 'nvim-telescope/telescope.nvim'
# hook_add = '''
#     " Using Lua functions
#     nnoremap <leader>ff <cmd>lua require('telescope.builtin').find_files()<cr>
#     nnoremap <leader>fg <cmd>lua require('telescope.builtin').live_grep()<cr>
#     nnoremap <leader>fb <cmd>lua require('telescope.builtin').buffers()<cr>
#     nnoremap <leader>fh <cmd>lua require('telescope.builtin').help_tags()<cr>
# '''

[[plugins]]
repo = 'preservim/nerdtree'
hook_add = '''
  if has('mac')
    nnoremap <Leader>b :NERDTreeToggle<CR>
  else
    nnoremap <A-b> :NERDTreeToggle<CR>
  endif
'''
# if you want to see dot files or folders, press "shift + i" after :NERDTreeToggle.

# icon for NERDTREE
[[plugins]]
repo = 'ryanoasis/vim-devicons'
hook_add = '''
'''

